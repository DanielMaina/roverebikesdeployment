{"ast":null,"code":"import axios from \"axios\";\nimport { TokenService } from \"./storage.service\";\nconst ApiService = {\n  init() {\n    axios.defaults.baseURL = \"https://roverebike.ca/mw/\";\n    axios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\n    axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n  },\n\n  setHeader() {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${TokenService.getToken()}`;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  /**\n   * Perform a custom Axios request.\n   *\n   * data is an object containing the following properties:\n   *  - method\n   *  - url\n   *  - data ... request payload\n   *  - auth (optional)\n   *    - username\n   *    - password\n   **/\n  customRequest(data) {\n    return axios(data);\n  }\n\n};\nexport default ApiService;","map":{"version":3,"sources":["/Users/danielmaina/Downloads/rover-ebike-master/src/services/api.config.js"],"names":["axios","TokenService","ApiService","init","defaults","baseURL","headers","post","setHeader","common","getToken","removeHeader","get","resource","data","put","delete","customRequest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,GAAG;AACLH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AACAL,IAAAA,KAAK,CAACI,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IACE,gCADF;AAEAP,IAAAA,KAAK,CAACI,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,6BAA5B,IAA6D,GAA7D;AACD,GANgB;;AAQjBC,EAAAA,SAAS,GAAG;AACVR,IAAAA,KAAK,CAACI,QAAN,CAAeE,OAAf,CAAuBG,MAAvB,CACE,eADF,IAEK,UAASR,YAAY,CAACS,QAAb,EAAwB,EAFtC;AAGD,GAZgB;;AAcjBC,EAAAA,YAAY,GAAG;AACbX,IAAAA,KAAK,CAACI,QAAN,CAAeE,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;AACD,GAhBgB;;AAkBjBG,EAAAA,GAAG,CAACC,QAAD,EAAW;AACZ,WAAOb,KAAK,CAACY,GAAN,CAAUC,QAAV,CAAP;AACD,GApBgB;;AAsBjBN,EAAAA,IAAI,CAACM,QAAD,EAAWC,IAAX,EAAiB;AACnB,WAAOd,KAAK,CAACO,IAAN,CAAWM,QAAX,EAAqBC,IAArB,CAAP;AACD,GAxBgB;;AA0BjBC,EAAAA,GAAG,CAACF,QAAD,EAAWC,IAAX,EAAiB;AAClB,WAAOd,KAAK,CAACe,GAAN,CAAUF,QAAV,EAAoBC,IAApB,CAAP;AACD,GA5BgB;;AA8BjBE,EAAAA,MAAM,CAACH,QAAD,EAAW;AACf,WAAOb,KAAK,CAACgB,MAAN,CAAaH,QAAb,CAAP;AACD,GAhCgB;;AAkCjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,aAAa,CAACH,IAAD,EAAO;AAClB,WAAOd,KAAK,CAACc,IAAD,CAAZ;AACD;;AA/CgB,CAAnB;AAkDA,eAAeZ,UAAf","sourcesContent":["import axios from \"axios\";\nimport { TokenService } from \"./storage.service\";\n\nconst ApiService = {\n  init() {\n    axios.defaults.baseURL = \"https://roverebike.ca/mw/\";\n    axios.defaults.headers.post[\"Content-Type\"] =\n      \"application/json;charset=utf-8\";\n    axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n  },\n\n  setHeader() {\n    axios.defaults.headers.common[\n      \"Authorization\"\n    ] = `Bearer ${TokenService.getToken()}`;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  /**\n   * Perform a custom Axios request.\n   *\n   * data is an object containing the following properties:\n   *  - method\n   *  - url\n   *  - data ... request payload\n   *  - auth (optional)\n   *    - username\n   *    - password\n   **/\n  customRequest(data) {\n    return axios(data);\n  },\n};\n\nexport default ApiService;\n"]},"metadata":{},"sourceType":"module"}