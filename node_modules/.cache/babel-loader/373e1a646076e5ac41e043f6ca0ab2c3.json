{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/rover-ebike-master/src/contexts/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport { CartReducer, sumItems } from './CartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst storage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst initialState = {\n  cartItems: storage,\n  ...sumItems(storage),\n  checkout: false\n};\n\nconst CartContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  const increase = payload => {\n    dispatch({\n      type: 'INCREASE',\n      payload\n    });\n  };\n\n  const decrease = payload => {\n    dispatch({\n      type: 'DECREASE',\n      payload\n    });\n  };\n\n  const addProduct = payload => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload\n    });\n  };\n\n  const removeProduct = payload => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload\n    });\n  };\n\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR'\n    });\n  };\n\n  const handleCheckout = () => {\n    console.log('CHECKOUT', state);\n    dispatch({\n      type: 'CHECKOUT'\n    });\n  };\n\n  const contextValues = {\n    removeProduct,\n    addProduct,\n    increase,\n    decrease,\n    clearCart,\n    handleCheckout,\n    ...state\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/rover-ebike-master/src/contexts/CartContext.js"],"names":["React","createContext","useReducer","CartReducer","sumItems","CartContext","storage","localStorage","getItem","JSON","parse","initialState","cartItems","checkout","CartContextProvider","children","state","dispatch","increase","payload","type","decrease","addProduct","removeProduct","clearCart","handleCheckout","console","log","contextValues"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,eAAtC;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,MAAMK,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAA1F;AACA,MAAMG,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAEN,OAAb;AAAsB,KAAGF,QAAQ,CAACE,OAAD,CAAjC;AAA4CO,EAAAA,QAAQ,EAAE;AAAtD,CAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACC,WAAD,EAAcQ,YAAd,CAApC;;AAEA,QAAMO,QAAQ,GAAGC,OAAO,IAAI;AACxBF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAGF,OAAO,IAAI;AACxBF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAGH,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMI,aAAa,GAAGJ,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,aAAP;AAAsBD,MAAAA;AAAtB,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACpBP,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMK,cAAc,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,KAAxB;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAHD;;AAKA,QAAMQ,aAAa,GAAG;AAClBL,IAAAA,aADkB;AAElBD,IAAAA,UAFkB;AAGlBJ,IAAAA,QAHkB;AAIlBG,IAAAA,QAJkB;AAKlBG,IAAAA,SALkB;AAMlBC,IAAAA,cANkB;AAOlB,OAAGT;AAPe,GAAtB;AAUA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEY,aAA7B;AAAA,cACMb;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5CD;;GAAMD,mB;;KAAAA,mB;AA8CN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { CartReducer, sumItems } from './CartReducer';\n\nexport const CartContext = createContext()\n\nconst storage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst initialState = { cartItems: storage, ...sumItems(storage), checkout: false };\n\nconst CartContextProvider = ({children}) => {\n\n    const [state, dispatch] = useReducer(CartReducer, initialState)\n\n    const increase = payload => {\n        dispatch({type: 'INCREASE', payload})\n    }\n\n    const decrease = payload => {\n        dispatch({type: 'DECREASE', payload})\n    }\n\n    const addProduct = payload => {\n        dispatch({type: 'ADD_ITEM', payload})\n    }\n\n    const removeProduct = payload => {\n        dispatch({type: 'REMOVE_ITEM', payload})\n    }\n\n    const clearCart = () => {\n        dispatch({type: 'CLEAR'})\n    }\n\n    const handleCheckout = () => {\n        console.log('CHECKOUT', state);\n        dispatch({type: 'CHECKOUT'})\n    }\n\n    const contextValues = {\n        removeProduct,\n        addProduct,\n        increase,\n        decrease,\n        clearCart,\n        handleCheckout,\n        ...state\n    } \n\n    return ( \n        <CartContext.Provider value={contextValues} >\n            { children }\n        </CartContext.Provider>\n     );\n}\n \nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}