{"ast":null,"code":"const Storage = cartItems => {\n  localStorage.setItem(\"cart\", JSON.stringify(cartItems.length > 0 ? cartItems : []));\n};\n\n_c = Storage;\nexport const sumItems = cartItems => {\n  Storage(cartItems);\n  let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\n  let total = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\n  let totalAmount = parseFloat(total) + parseFloat(400.0);\n  return {\n    itemCount,\n    total,\n    totalAmount\n  };\n};\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      if (!state.cartItems.find(item => item.id === action.payload.id)) {\n        state.cartItems.push({ ...action.payload,\n          quantity: 1\n        });\n      }\n\n      return { ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems]\n      };\n\n    case \"REMOVE_ITEM\":\n      return { ...state,\n        ...sumItems(state.cartItems.filter(item => item.id !== action.payload.id)),\n        cartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\n      };\n\n    case \"INCREASE\":\n      let existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n\n      if (existingCartItemIndex > -1) {\n        const cartItems = [...state.cartItems.slice(0, existingCartItemIndex), { ...state.cartItems[existingCartItemIndex],\n          quantity: state.cartItems[existingCartItemIndex].quantity + 1\n        }, ...state.cartItems.slice(existingCartItemIndex + 1)];\n        return { ...state,\n          ...sumItems(cartItems),\n          cartItems: [...cartItems]\n        };\n      }\n\n      return state;\n\n    case \"DECREASE\":\n      let quantity = state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity;\n\n      if (quantity > 1) {\n        let existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n\n        if (existingCartItemIndex > -1) {\n          const cartItems = [...state.cartItems.slice(0, existingCartItemIndex), { ...state.cartItems[existingCartItemIndex],\n            quantity: quantity - 1\n          }, ...state.cartItems.slice(existingCartItemIndex + 1)];\n          return { ...state,\n            ...sumItems(cartItems),\n            cartItems: [...cartItems]\n          };\n        }\n\n        return state;\n      } else {\n        return { ...state,\n          ...sumItems(state.cartItems.filter(item => item.id !== action.payload.id)),\n          cartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\n        };\n      }\n\n    case \"CHECKOUT\":\n      return {\n        cartItems: [],\n        checkout: true,\n        ...sumItems([])\n      };\n\n    case \"CLEAR\":\n      return {\n        cartItems: [],\n        ...sumItems([])\n      };\n\n    default:\n      return state;\n  }\n};\n_c2 = CartReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Storage\");\n$RefreshReg$(_c2, \"CartReducer\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/rover-ebike-master/src/contexts/CartReducer.js"],"names":["Storage","cartItems","localStorage","setItem","JSON","stringify","length","sumItems","itemCount","reduce","total","product","quantity","price","toFixed","totalAmount","parseFloat","CartReducer","state","action","type","find","item","id","payload","push","filter","existingCartItemIndex","findIndex","slice","checkout"],"mappings":"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","sourcesContent":["const Storage = (cartItems) => {\n  localStorage.setItem(\n    \"cart\",\n    JSON.stringify(cartItems.length > 0 ? cartItems : [])\n  );\n};\n\nexport const sumItems = (cartItems) => {\n  Storage(cartItems);\n  let itemCount = cartItems.reduce(\n    (total, product) => total + product.quantity,\n    0\n  );\n  let total = cartItems\n    .reduce((total, product) => total + product.price * product.quantity, 0)\n    .toFixed(2);\n\n  let totalAmount = parseFloat(total) + parseFloat(400.0);\n  return { itemCount, total, totalAmount };\n};\n\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      if (!state.cartItems.find((item) => item.id === action.payload.id)) {\n        state.cartItems.push({\n          ...action.payload,\n          quantity: 1,\n        });\n      }\n\n      return {\n        ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems],\n      };\n    case \"REMOVE_ITEM\":\n      return {\n        ...state,\n        ...sumItems(\n          state.cartItems.filter((item) => item.id !== action.payload.id)\n        ),\n        cartItems: [\n          ...state.cartItems.filter((item) => item.id !== action.payload.id),\n        ],\n      };\n    case \"INCREASE\":\n      let existingCartItemIndex = state.cartItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (existingCartItemIndex > -1) {\n        const cartItems = [\n          ...state.cartItems.slice(0, existingCartItemIndex),\n          {\n            ...state.cartItems[existingCartItemIndex],\n            quantity: state.cartItems[existingCartItemIndex].quantity + 1,\n          },\n          ...state.cartItems.slice(existingCartItemIndex + 1),\n        ];\n        return {\n          ...state,\n          ...sumItems(cartItems),\n          cartItems: [...cartItems],\n        };\n      }\n      return state;\n\n    case \"DECREASE\":\n      let quantity =\n        state.cartItems[\n          state.cartItems.findIndex((item) => item.id === action.payload.id)\n        ].quantity;\n\n      if (quantity > 1) {\n        let existingCartItemIndex = state.cartItems.findIndex(\n          (item) => item.id === action.payload.id\n        );\n        if (existingCartItemIndex > -1) {\n          const cartItems = [\n            ...state.cartItems.slice(0, existingCartItemIndex),\n            {\n              ...state.cartItems[existingCartItemIndex],\n              quantity: quantity - 1,\n            },\n            ...state.cartItems.slice(existingCartItemIndex + 1),\n          ];\n\n          return {\n            ...state,\n            ...sumItems(cartItems),\n            cartItems: [...cartItems],\n          };\n        }\n        return state;\n      } else {\n        return {\n          ...state,\n          ...sumItems(\n            state.cartItems.filter((item) => item.id !== action.payload.id)\n          ),\n          cartItems: [\n            ...state.cartItems.filter((item) => item.id !== action.payload.id),\n          ],\n        };\n      }\n    case \"CHECKOUT\":\n      return {\n        cartItems: [],\n        checkout: true,\n        ...sumItems([]),\n      };\n    case \"CLEAR\":\n      return {\n        cartItems: [],\n        ...sumItems([]),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}